/*-
 *
 * Hedera Network Services Protobuf
 *
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package services;

option java_package = "com.hederahashgraph.service.proto";
option java_multiple_files = true;
import "services/transaction_response.proto";
import "services/query.proto";
import "services/response.proto";
import "services/transaction.proto";

/*
 * Transactions and queries for the file service.
 */
service SmartContractService {
    // Creates a contract
    rpc CreateContract (Transaction) returns (TransactionResponse);

    // Updates a contract with the content
    rpc UpdateContract (Transaction) returns (TransactionResponse);

    // Calls a contract
    rpc ContractCallMethod (Transaction) returns (TransactionResponse);

    // Retrieves the contract information
    rpc GetContractInfo (Query) returns (Response);

    // Calls a smart contract to be run on a single node
    rpc ContractCallLocalMethod (Query) returns (Response);

    // Retrieves the byte code of a contract
    rpc ContractGetBytecode (Query) returns (Response);

    // Retrieves a contract by its Solidity address
    rpc GetBySolidityId (Query) returns (Response);

    // Always returns an empty record list, as contract accounts are never
    // effective payers for transactions
    rpc GetTxRecordByContractId (Query) returns (Response) {
        option deprecated = true;
    };

    // Deletes a contract instance and transfers any remaining hbars to a
    // specified receiver
    rpc DeleteContract (Transaction) returns (TransactionResponse);

    // Deletes a contract if the submitting account has network admin privileges
    rpc SystemDelete (Transaction) returns (TransactionResponse);

    // Undeletes a contract if the submitting account has network admin
    // privileges
    rpc SystemUndelete (Transaction) returns (TransactionResponse);
}
