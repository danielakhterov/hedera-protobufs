/*-
 *
 * Hedera Network Services Protobuf
 *
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package services;

option java_package = "com.hederahashgraph.service.proto";
option java_multiple_files = true;
import "services/query.proto";
import "services/response.proto";
import "services/transaction_response.proto";
import "services/transaction.proto";

/*
 * Transactions and queries for the Crypto Service.
 */
service CryptoService {
    // Creates a new account by submitting the transaction
    rpc CreateAccount (Transaction) returns (TransactionResponse);

    // Updates an account by submitting the transaction
    rpc UpdateAccount (Transaction) returns (TransactionResponse);

    // Initiates a transfer by submitting the transaction
    rpc CryptoTransfer (Transaction) returns (TransactionResponse);

    // Deletes and account by submitting the transaction
    rpc CryptoDelete (Transaction) returns (TransactionResponse);

    // (NOT CURRENTLY SUPPORTED) Adds a livehash
    rpc AddLiveHash (Transaction) returns (TransactionResponse);

    // (NOT CURRENTLY SUPPORTED) Deletes a livehash
    rpc DeleteLiveHash (Transaction) returns (TransactionResponse);

    // (NOT CURRENTLY SUPPORTED) Retrieves a livehash for an account
    rpc GetLiveHash (Query) returns (Response);

    // Returns all transactions in the last 180s of consensus time for which
    // the given account was the effective payer <b>and</b> network property
    // <tt>ledger.keepRecordsInState</tt> was <tt>true</tt>.
    rpc GetAccountRecords (Query) returns (Response);

    // Retrieves the balance of an account
    rpc CryptoGetBalance (Query) returns (Response);

    // Retrieves the metadata of an account
    rpc GetAccountInfo (Query) returns (Response);

    // Retrieves the latest receipt for a transaction that is either awaiting
    // consensus, or reached consensus in the last 180 seconds
    rpc GetTransactionReceipts (Query) returns (Response);

    // (NOT CURRENTLY SUPPORTED) Returns the records of transactions recently
    // funded by an account
    rpc GetFastTransactionRecord (Query) returns (Response);

    // Retrieves the record of a transaction that is either awaiting consensus
    // , or reached consensus in the last 180 seconds
    rpc GetTxRecordByTxId (Query) returns (Response);

    // (NOT CURRENTLY SUPPORTED) Retrieves the stakers for a node by account id
    rpc GetStakersByAccountId (Query) returns (Response);
}
